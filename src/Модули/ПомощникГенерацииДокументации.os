Функция ЗагрузитьШаблоны(ПутьКШаблонам, ШаблоныПоУмолчанию) Экспорт

	Если НЕ ЗначениеЗаполнено(ПутьКШаблонам) Тогда
		
		ПутьКШаблонам = ОбъединитьПути(ТекущийСценарий().Каталог, "..", "additional", ШаблоныПоУмолчанию);
		
	КонецЕсли;
	
	Текст = Новый ТекстовыйДокумент;
	Текст.Прочитать(ПутьКШаблонам, "UTF-8");
	СодержимоеШаблона = Текст.ПолучитьТекст();
	ПарсерJSON = Новый ПарсерJSON;
	ПредШаблоны = ПарсерJSON.ПрочитатьJSON(СодержимоеШаблона);
	Шаблоны = Новый Структура;
	Для Каждого Элемент Из ПредШаблоны Цикл
		
		Шаблоны.Вставить(Элемент.Ключ, СтрЗаменить(Элемент.Значение, """", "\"""));
		
	КонецЦикла;
	
	Возврат Шаблоны;
	
КонецФункции

Функция СоздатьКаталогРаздела(Знач БазовыйКаталог, Знач Раздел) Экспорт

	ЧастиПути = Новый Массив;

	Пока Раздел <> Неопределено Цикл
		ЧастиПути.Добавить(Раздел.Имя);
		Раздел = Раздел.Родитель;
	КонецЦикла;
	
	Каталог = БазовыйКаталог;
	
	Для Инд = 1 По ЧастиПути.Количество() Цикл
		
		Каталог = ОбъединитьПути(Каталог, ЧастиПути[ЧастиПути.Количество() - Инд]);
		СоздатьКаталог(Каталог);

	КонецЦикла;
	
	Возврат Каталог;

КонецФункции

Функция ПроверкаВозможностиПубликацииВКаталог(БазовыйКаталог, Раздел, ОшибкиПубликации) Экспорт
	
	Каталог = Новый Файл(БазовыйКаталог);

	Если НЕ Каталог.Существует() ИЛИ НЕ Каталог.ЭтоКаталог() Тогда
		
		ОшибкиПубликации.Добавить("Отсутствует каталог размещения автодокументации: '" + Каталог.ПолноеИмя + "'");
		Возврат Ложь;

	КонецЕсли;

	Попытка

		СоздатьКаталогРаздела(БазовыйКаталог, Раздел);

	Исключение
		
		ОшибкиПубликации.Добавить("Ошибка создания каталога '" + Раздел.Имя + "': " + ОписаниеОшибки());
		Возврат Ложь;

	КонецПопытки;
		
	Возврат Истина;

КонецФункции

Функция СобратьИерархиюПоПодсистемам(ОбъектыПодсистем, Ошибки) Экспорт
	
	Иерархия = Новый Соответствие;
	
	Для Каждого Объект Из ОбъектыПодсистем Цикл
		
		Если Объект.Подсистема = Неопределено ИЛИ ПустаяСтрока(Объект.Подсистема.ИмяРаздела) Тогда
			
			Сообщить(СтрШаблон("Объект %1 не включен в подсистемы", Объект.Имя));
			Продолжить;
			
		КонецЕсли;

		ДанныеПодсистемы = Объект.Подсистема;

		Раздел = ДанныеПодсистемы.ИмяРаздела;
		Подсистема = ДанныеПодсистемы.ИмяПодсистемы;
		
		ДанныеРаздела = Иерархия[Раздел];
		
		Если ДанныеРаздела = Неопределено Тогда
			
			ДанныеРаздела = Новый Соответствие;
			Иерархия[Раздел] = ДанныеРаздела;
			
		КонецЕсли;
		
		ДанныеПодсистемы = ДанныеРаздела[Подсистема];
		Если ДанныеПодсистемы = Неопределено Тогда
			
			ДанныеПодсистемы = Новый Массив;
			ДанныеРаздела[Подсистема] = ДанныеПодсистемы;
			
		КонецЕсли;

		ДанныеПодсистемы.Добавить(Объект);
		
	КонецЦикла;

	Возврат Иерархия;

КонецФункции
