///////////////////////////////////////////////////////////////////
//
// Функционал чтения / модификации файла описания конфигурации
//
// (с) BIA Technologies, LLC	
//
///////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////
// Программный интерфейс
///////////////////////////////////////////////////////////////////

// ОписаниеКонфигурации
//	Читает файл конфигурации и возвращает структуру 
//	с набором основных атрибутов
//
// Параметры:
//  КаталогИсходныхФайлов - Строка - Каталог исходных файлов конфигурации
//
// Возвращаемое значение:
//   Структура   - Набор атрибутов конфигурации
//
Функция ОписаниеКонфигурации(КаталогИсходныхФайлов)Экспорт
	
	ПутьКФайлуОписания = НайтиПутьКФайлуОписания(КаталогИсходныхФайлов);

	Текст = Новый ТекстовыйДокумент;
	Текст.Прочитать(ПутьКФайлуОписания, "UTF-8");
	СодержимоеФайла = Текст.ПолучитьТекст();

	АтрибутыКонфигурации = Новый Структура("Имя, Версия", "", "");
	Регексп = Новый РегулярноеВыражение("<Name>([.\W\w]+?)<\/Name>");
	Регексп.ИгнорироватьРегистр = ИСТИНА;
	Регексп.Многострочный = ИСТИНА;
	ИскомыйПараметр = Регексп.НайтиСовпадения(СодержимоеФайла);
	Если ИскомыйПараметр.Количество() Тогда

		АтрибутыКонфигурации.Вставить("Имя", ИскомыйПараметр[0].Группы[1].Значение);

	КонецЕсли;

	Регексп = Новый РегулярноеВыражение("<Version>([.\W\w]+?)<\/Version>");
	Регексп.ИгнорироватьРегистр = ИСТИНА;
	Регексп.Многострочный = ИСТИНА;
	ИскомыйПараметр = Регексп.НайтиСовпадения(СодержимоеФайла);
	Если ИскомыйПараметр.Количество() Тогда

		АтрибутыКонфигурации.Вставить("Версия", ИскомыйПараметр[0].Группы[1].Значение);

	КонецЕсли;

	Возврат АтрибутыКонфигурации;
	
КонецФункции // ОписаниеКонфигурации()

// УстановитьВерсию
//	Выполяет установку новой версии конфигурации
//
// Параметры:
//  КаталогИсходныхФайлов - Строка - Каталог исходных файлов конфигурации
//  Версия - Строка - Номер новой версии
//
Процедура УстановитьВерсию(КаталогИсходныхФайлов, Версия)Экспорт
	
	ПутьКФайлуОписания = НайтиПутьКФайлуОписания(КаталогИсходныхФайлов);

	Текст = Новый ТекстовыйДокумент;
	Текст.Прочитать(ПутьКФайлуОписания, "UTF-8");
	СодержимоеФайла = Текст.ПолучитьТекст();

	Регексп = Новый РегулярноеВыражение("<Version>([.\W\w]+?)<\/Version>");
	Регексп.ИгнорироватьРегистр = ИСТИНА;
	Регексп.Многострочный = ИСТИНА;
	СодержимоеФайла = Регексп.Заменить(СодержимоеФайла, "<Version>" + Версия + "</Version>");
	Текст.УстановитьТекст(СодержимоеФайла);
	Текст.Записать(ПутьКФайлуОписания, "UTF-8");
	
КонецПроцедуры // УстановитьВерсию()

// УстановитьИмя
//	Изменяет имя конфигурации
//
// Параметры:
//  КаталогИсходныхФайлов - Строка - Каталог исходных файлов конфигурации
//  ИмяКонфигурации - Строка - Новое имя конфигурации
//
Процедура УстановитьИмя(КаталогИсходныхФайлов, ИмяКонфигурации)Экспорт
	
	ПутьКФайлуОписания = НайтиПутьКФайлуОписания(КаталогИсходныхФайлов);

	Текст = Новый ТекстовыйДокумент;
	Текст.Прочитать(ПутьКФайлуОписания);
	СодержимоеФайла = Текст.ПолучитьТекст();

	Регексп = Новый РегулярноеВыражение("<Name>([.\W\w]+?)<\/Name>");
	Регексп.ИгнорироватьРегистр = ИСТИНА;
	Регексп.Многострочный = ИСТИНА;
	СодержимоеФайла = Регексп.Заменить(СодержимоеФайла, "<Name>" + ИмяКонфигурации + "</Name>");

	Текст.УстановитьТекст(СодержимоеФайла);
	Текст.Записать(ПутьКФайлуОписания, "UTF-8");
	
	ФайлыРолей = НайтиФайлы(ОбъединитьПути(КаталогИсходныхФайлов, "Roles"), "Rights.xml", ИСТИНА);
	Регексп = Новый РегулярноеВыражение("<name>\s*Configuration\.([.\W\w]+?)<\/name>");
	Регексп.ИгнорироватьРегистр = ИСТИНА;
	Регексп.Многострочный = ИСТИНА;
	
	Для Каждого ФайлРоли Из ФайлыРолей Цикл

		Текст = Новый ТекстовыйДокумент;
		Текст.Прочитать(ФайлРоли.ПолноеИмя, "UTF-8");
		СодержимоеФайла = Текст.ПолучитьТекст();

		СодержимоеФайла = Регексп.Заменить(СодержимоеФайла, "<name>Configuration." + ИмяКонфигурации + "</name>");
		Текст.УстановитьТекст(СодержимоеФайла);
		Текст.Записать(ФайлРоли.ПолноеИмя, "UTF-8");

	КонецЦикла

КонецПроцедуры // УстановитьИмя()

Функция НайтиПутьКФайлуОписания(КаталогИсходныхФайлов)Экспорт
	
	Файл = Новый Файл(КаталогИсходныхФайлов);
	Если НЕ (Файл.Существует() И Файл.ЭтоКаталог()) Тогда

		ВызватьИсключение СтрШаблон("Каталог исходных файлов '%1' не существует либо это файл", КаталогИсходныхФайлов);

	КонецЕсли;

	ПутьКФайлуОписания = ОбъединитьПути(КаталогИсходныхФайлов, "Configuration.xml");
	Файл = Новый Файл(ПутьКФайлуОписания);
	Если НЕ (Файл.Существует() И Файл.ЭтоФайл()) Тогда

		ВызватьИсключение СтрШаблон("Файл описания конфигурации '%1' не существует либо это каталог", ПутьКФайлуОписания);

	КонецЕсли;

	Возврат ПутьКФайлуОписания;

КонецФункции // НайтиПутьКФайлуОписания()