///////////////////////////////////////////////////////////////////
//
// Служебный класс генерации документации в формате html
//
///////////////////////////////////////////////////////////////////

Перем КаталогПубликацииДокументации;
Перем АнализироватьТолькоПотомковПодсистемы;

///////////////////////////////////////////////////////////////////
// СТАНДАРТНЫЙ ИНТЕРФЕЙС
///////////////////////////////////////////////////////////////////

Функция ДокументацияПоМодулю(ДанныеМодуля) Экспорт
	
	Запись = Новый ЗаписьJSON();
	ПараметрыЗаписиJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Unix);
	Запись.УстановитьСтроку(ПараметрыЗаписиJSON);
	
	Запись.ЗаписатьНачалоОбъекта();
	
	ТекущийРаздел = Неопределено;
	
	Для Каждого ОписаниеМетода Из ДанныеМодуля.Методы Цикл
		
		Если ТекущийРаздел <> ОписаниеМетода.ИмяРаздела Тогда
			
			Если ТекущийРаздел <> Неопределено Тогда
				
				Запись.ЗаписатьКонецМассива();
				
			КонецЕсли;

			ТекущийРаздел = ОписаниеМетода.ИмяРаздела;
			Запись.ЗаписатьИмяСвойства(ТекущийРаздел);
			Запись.ЗаписатьНачалоМассива();
			
		КонецЕсли;
		
		ОписаниеПараметров = Новый Массив;

		Для Каждого Параметр Из ОписаниеМетода.ПараметрыМетода Цикл
			
			ОписаниеПараметра = Новый Структура;
			ОписаниеПараметра.Вставить("name", Параметр.Имя);
			ОписаниеПараметра.Вставить("required", НЕ ЗначениеЗаполнено(Параметр.ЗначениеПоУмолчанию));
			ОписаниеПараметра.Вставить("type", Параметр.ТипПараметра);
			ОписаниеПараметра.Вставить("description", Параметр.ОписаниеПараметра);
			ОписаниеПараметра.Вставить("default", Параметр.ЗначениеПоУмолчанию);
			
			ОписаниеПараметров.Добавить(ОписаниеПараметра);

		КонецЦикла;

		ЭтоФункция = ОписаниеМетода.ТипБлока = ТипБлоковМодуля.ЗаголовокФункции;
		Метод = Новый Структура;
		Метод.Вставить("name", ОписаниеМетода.ИмяМетода);
		Метод.Вставить("description", ОписаниеМетода.Описание);
		Метод.Вставить("type", ?(ЭтоФункция, "function", "procedure"));
		Метод.Вставить("public", ОписаниеМетода.Экспортный);
		
		Если ОписаниеПараметров.Количество() Тогда
			Метод.Вставить("parameters", ОписаниеПараметров);
		КонецЕсли;
		
		Если ЭтоФункция Тогда
			ОписаниеВозврат = Новый Структура;
			ОписаниеВозврат.Вставить("type", ОписаниеМетода.ТипВозвращаемогоЗначения);
			ОписаниеВозврат.Вставить("description", ОписаниеМетода.ОписаниеВозвращаемогоЗначения);
			Метод.Вставить("return", ОписаниеВозврат);
		КонецЕсли;

		Если ОписаниеМетода.Примеры.Количество() Тогда
			Метод.Вставить("samples", ОписаниеМетода.Примеры);
		КонецЕсли;
		
		ЗаписатьJSON(Запись, Метод);
		
	КонецЦикла;
	
	Если ТекущийРаздел <> Неопределено Тогда
		Запись.ЗаписатьКонецМассива();
	КонецЕсли;

	Запись.ЗаписатьКонецОбъекта();

	Возврат Запись.Закрыть();

КонецФункции

Процедура ОпубликоватьРаздел(Раздел, ОбъектыРаздела) Экспорт
	
	Каталог = КаталогРаздела(Раздел);

	Для Каждого Объект Из ОбъектыРаздела Цикл
		
		ИмяФайла = ОбъединитьПути(Каталог, Объект.Имя + ".json");
		Запись = Новый ЗаписьТекста(ИмяФайла, КодировкаТекста.UTF8);
		Запись.Записать(Объект.Содержимое);
		Запись.Закрыть();
		
	КонецЦикла;

КонецПроцедуры

Функция КаталогРаздела(Знач Раздел)
	
	ЧастиПути = Новый Массив;

	Пока Раздел <> Неопределено Цикл
		ЧастиПути.Добавить(Раздел.Имя);
	КонецЦикла;
	
	Каталог = КаталогПубликацииДокументации;
	
	Для Инд = 1 По ЧастиПути.Количество() Цикл
		
		Каталог = ОбъединитьПути(Каталог, ЧастиПути[ЧастиПути.Количество() - Инд]);
		СоздатьКаталог(Каталог);

	КонецЦикла;

	Возврат Каталог;

КонецФункции

#Область Настройки

// Производит чтение настроек из конфигурационного файла и сохраняет их в свойствах объекта
//
// Параметры:
//	 НастройкиСтенда - Объект.НастройкиСтенда - Объект, содержащий информацию конфигурационного файла
//
// Возвращаемое значение:
//	Строка - описание возникших ошибок
Функция ПрочитатьНастройки(НастройкиСтенда) Экспорт

	ТекстОшибки = "";

	Настройки = НастройкиСтенда.Настройка("AutodocGen\НастройкиJSON");
	Если ЗначениеЗаполнено(Настройки) Тогда

		КаталогПубликацииДокументации = Настройки["КаталогПубликации"];
		АнализироватьТолькоПотомковПодсистемы = Строка(Настройки["АнализироватьТолькоПотомковПодсистемы"]);

		Если НЕ ЗначениеЗаполнено(КаталогПубликацииДокументации) Тогда

			ТекстОшибки = "Некорректные настройки каталога публикации";

		КонецЕсли;

	Иначе

		ТекстОшибки = "Отсутствуют настройки";

	КонецЕсли;

	Возврат ТекстОшибки;

КонецФункции

#КонецОбласти

